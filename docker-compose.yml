services:
  ops_backend:
    build: .
    container_name: sumano-ops-backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sumano_ops
      - REDIS_URL=redis://redis:6379/0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./ops_backend:/app
      - ./ops_backend/staticfiles:/app/staticfiles
      - ./ops_backend/media:/app/media
      - ./ops_backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: sumano-ops-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database for Sumano OMS
  postgres:
    image: postgres:14-alpine
    container_name: sumano-ops-postgres
    environment:
      POSTGRES_DB: sumano_ops
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React frontend for Sumano OMS
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sumano-ops-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - ops_backend
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
