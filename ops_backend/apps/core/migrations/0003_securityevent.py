# Generated by Django 4.2.7 on 2025-09-30 18:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_project_status_updated_at_alter_project_actual_hours_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_attempt", "Login Attempt"),
                            ("login_success", "Login Success"),
                            ("login_failure", "Login Failure"),
                            ("logout", "Logout"),
                            ("permission_check", "Permission Check"),
                            ("access_denied", "Access Denied"),
                            ("token_refresh", "Token Refresh"),
                            ("password_change", "Password Change"),
                            ("account_lockout", "Account Lockout"),
                            ("suspicious_activity", "Suspicious Activity"),
                        ],
                        help_text="Type of security event",
                        max_length=50,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True, help_text="Django session key", max_length=40
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(help_text="IP address of the request"),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent string from the request"
                    ),
                ),
                (
                    "request_path",
                    models.CharField(
                        blank=True, help_text="Requested URL path", max_length=255
                    ),
                ),
                (
                    "request_method",
                    models.CharField(
                        blank=True,
                        help_text="HTTP method (GET, POST, etc.)",
                        max_length=10,
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional event details in JSON format",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        help_text="Severity level of this event",
                        max_length=20,
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this security event has been resolved",
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, help_text="When this event was resolved", null=True
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, help_text="Notes about how this event was resolved"
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who resolved this event",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User associated with this event (null for anonymous events)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Security Event",
                "verbose_name_plural": "Security Events",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "created_at"],
                        name="core_securi_event_t_e93b36_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="core_securi_user_id_5eb64f_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="core_securi_ip_addr_183a8e_idx",
                    ),
                    models.Index(
                        fields=["severity", "created_at"],
                        name="core_securi_severit_a97267_idx",
                    ),
                    models.Index(
                        fields=["is_resolved"], name="core_securi_is_reso_9e0520_idx"
                    ),
                ],
            },
        ),
    ]
