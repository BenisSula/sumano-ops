# Generated by Django 4.2.7 on 2024-01-XX XX:XX

from django.db import migrations


def create_default_roles_and_permissions(apps, schema_editor):
    """
    Create default roles and permissions for the RBAC system.
    
    This migration creates the core roles and permissions needed for
    the Sumano OMS security foundation.
    """
    Permission = apps.get_model('core', 'Permission')
    Role = apps.get_model('core', 'Role')
    
    # Create permissions
    permissions_data = [
        # User management permissions
        {'name': 'View Users', 'category': 'user', 'codename': 'view_users', 'description': 'Can view user information'},
        {'name': 'Manage Users', 'category': 'user', 'codename': 'manage_users', 'description': 'Can create, update, and delete users'},
        {'name': 'Change User Roles', 'category': 'user', 'codename': 'change_user_roles', 'description': 'Can change user roles and permissions'},
        
        # Client management permissions
        {'name': 'View Clients', 'category': 'client', 'codename': 'view_clients', 'description': 'Can view client information'},
        {'name': 'Manage Clients', 'category': 'client', 'codename': 'manage_clients', 'description': 'Can create, update, and delete clients'},
        
        # Project management permissions
        {'name': 'View Projects', 'category': 'project', 'codename': 'view_projects', 'description': 'Can view project information'},
        {'name': 'Manage Projects', 'category': 'project', 'codename': 'manage_projects', 'description': 'Can create, update, and delete projects'},
        {'name': 'Change Project Status', 'category': 'project', 'codename': 'change_project_status', 'description': 'Can change project status'},
        
        # Document management permissions
        {'name': 'View Documents', 'category': 'document', 'codename': 'view_documents', 'description': 'Can view document information'},
        {'name': 'Manage Documents', 'category': 'document', 'codename': 'manage_documents', 'description': 'Can create, update, and delete documents'},
        {'name': 'Approve Documents', 'category': 'document', 'codename': 'approve_documents', 'description': 'Can approve documents'},
        
        # Security management permissions
        {'name': 'View Security Events', 'category': 'security', 'codename': 'view_security_events', 'description': 'Can view security events'},
        {'name': 'Manage Security Events', 'category': 'security', 'codename': 'manage_security_events', 'description': 'Can manage security events'},
        {'name': 'View Audit Logs', 'category': 'security', 'codename': 'view_audit_logs', 'description': 'Can view audit logs'},
        
        # System administration permissions
        {'name': 'Manage Roles', 'category': 'system', 'codename': 'manage_roles', 'description': 'Can manage roles and permissions'},
        {'name': 'System Configuration', 'category': 'system', 'codename': 'system_configuration', 'description': 'Can modify system configuration'},
        {'name': 'Backup Restore', 'category': 'system', 'codename': 'backup_restore', 'description': 'Can backup and restore system data'},
    ]
    
    # Create permissions
    permissions = {}
    for perm_data in permissions_data:
        permission, created = Permission.objects.get_or_create(
            codename=perm_data['codename'],
            defaults=perm_data
        )
        permissions[perm_data['codename']] = permission
    
    # Create roles
    roles_data = [
        {
            'name': 'Super Administrator',
            'codename': 'superadmin',
            'description': 'Full system access with all permissions',
            'level': 100,
            'is_system_role': True,
            'permissions': list(permissions.keys()),  # All permissions
        },
        {
            'name': 'Staff Member',
            'codename': 'staff',
            'description': 'Standard staff member with project and client access',
            'level': 50,
            'is_system_role': True,
            'permissions': [
                'view_users', 'view_clients', 'manage_clients',
                'view_projects', 'manage_projects', 'change_project_status',
                'view_documents', 'manage_documents', 'approve_documents',
                'view_security_events', 'view_audit_logs',
            ],
        },
        {
            'name': 'Client Contact',
            'codename': 'client_contact',
            'description': 'Client representative with limited project access',
            'level': 20,
            'is_system_role': True,
            'permissions': [
                'view_projects', 'view_documents',
            ],
        },
        {
            'name': 'Auditor',
            'codename': 'auditor',
            'description': 'Audit role with read-only access to all data',
            'level': 30,
            'is_system_role': True,
            'permissions': [
                'view_users', 'view_clients', 'view_projects',
                'view_documents', 'view_security_events', 'view_audit_logs',
            ],
        },
    ]
    
    # Create roles
    for role_data in roles_data:
        role_permissions = role_data.pop('permissions')
        role, created = Role.objects.get_or_create(
            codename=role_data['codename'],
            defaults=role_data
        )
        
        # Add permissions to role
        for perm_codename in role_permissions:
            if perm_codename in permissions:
                role.permissions.add(permissions[perm_codename])


def reverse_create_default_roles_and_permissions(apps, schema_editor):
    """
    Reverse the creation of default roles and permissions.
    """
    Permission = apps.get_model('core', 'Permission')
    Role = apps.get_model('core', 'Role')
    
    # Delete all roles
    Role.objects.all().delete()
    
    # Delete all permissions
    Permission.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_securityevent'),
    ]

    operations = [
        migrations.RunPython(
            create_default_roles_and_permissions,
            reverse_create_default_roles_and_permissions,
        ),
    ]