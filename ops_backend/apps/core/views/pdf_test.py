"""
PDF generation test views for CI/CD validation.
"""
from django.http import HttpResponse, JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from django.template.loader import render_to_string
from weasyprint import HTML, CSS
import tempfile
import os


@csrf_exempt
@require_http_methods(["GET", "POST"])
def pdf_test(request):
    """
    Generate a test PDF for CI/CD validation.
    """
    try:
        # Create HTML content
        html_content = """
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>Sumano OMS Test PDF</title>
            <style>
                body {
                    font-family: Arial, sans-serif;
                    margin: 40px;
                    color: #333;
                }
                .header {
                    text-align: center;
                    border-bottom: 2px solid #007bff;
                    padding-bottom: 20px;
                    margin-bottom: 30px;
                }
                .content {
                    line-height: 1.6;
                }
                .footer {
                    margin-top: 50px;
                    text-align: center;
                    font-size: 12px;
                    color: #666;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Sumano Operations Management System</h1>
                <h2>Test PDF Generation</h2>
            </div>
            <div class="content">
                <h3>Hello OMS!</h3>
                <p>This is a test PDF generated by the Sumano OMS backend to validate PDF generation capabilities.</p>
                <p>The PDF generation is working correctly if you can read this text.</p>
                <ul>
                    <li>WeasyPrint is properly installed</li>
                    <li>System dependencies are available</li>
                    <li>PDF generation pipeline is functional</li>
                </ul>
            </div>
            <div class="footer">
                <p>Generated by Sumano OMS Backend - Version 0.1.0</p>
            </div>
        </body>
        </html>
        """
        
        # Generate PDF
        html = HTML(string=html_content)
        css = CSS(string='@page { size: A4; margin: 1in; }')
        
        # Create temporary file
        with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as tmp_file:
            html.write_pdf(tmp_file.name, stylesheets=[css])
            
            # Read the generated PDF
            with open(tmp_file.name, 'rb') as pdf_file:
                pdf_content = pdf_file.read()
            
            # Clean up
            os.unlink(tmp_file.name)
        
        # Return PDF response
        response = HttpResponse(pdf_content, content_type='application/pdf')
        response['Content-Disposition'] = 'attachment; filename="ci-sample.pdf"'
        return response
        
    except Exception as e:
        return JsonResponse({
            'error': 'PDF generation failed',
            'message': str(e)
        }, status=500)


@csrf_exempt
@require_http_methods(["GET"])
def pdf_status(request):
    """
    Check PDF generation status without generating a file.
    """
    try:
        # Test WeasyPrint import and basic functionality
        from weasyprint import HTML, CSS
        
        # Simple test HTML
        test_html = HTML(string='<html><body><h1>Test</h1></body></html>')
        
        return JsonResponse({
            'status': 'success',
            'message': 'PDF generation is available',
            'weasyprint_available': True
        })
        
    except ImportError:
        return JsonResponse({
            'status': 'error',
            'message': 'WeasyPrint is not available',
            'weasyprint_available': False
        }, status=500)
    except Exception as e:
        return JsonResponse({
            'status': 'error',
            'message': f'PDF generation test failed: {str(e)}',
            'weasyprint_available': False
        }, status=500)
